{"version":3,"file":"sentry-transaction.service.js","sourceRoot":"/","sources":["sentry-transaction.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,2CAAuC;AACvC,2CAAoD;AACpD,uCAAuC;AACvC,uCAAuC;AAIhC,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IAKnC,YAAqC,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QACnD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QAG9C,MAAM,WAAW,GAAG,MAAM,CAAC,gBAAgB,CAAC;YAC1C,IAAI,EAAE,UAAU,MAAM,IAAI,GAAG,EAAE;YAC/B,EAAE,EAAE,aAAa;SAClB,CAAC,CAAC;QAGH,MAAM,CAAC,aAAa,EAAE,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,EAAE;YAC9C,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAG3B,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE;gBACvB,MAAM;gBACN,GAAG;gBACH,OAAO;aACR,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAxBD,IAAI,IAAI;;QACN,OAAO,MAAA,MAAM,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,0CAAE,OAAO,EAAE,CAAC;IACtD,CAAC;IAwBD,UAAU,CAAC,WAAwB;;QACjC,OAAO,MAAA,IAAI,CAAC,IAAI,0CAAE,UAAU,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC;CACF,CAAA;AA9BY,wBAAwB;IADpC,IAAA,mBAAU,EAAC,EAAE,KAAK,EAAE,cAAK,CAAC,OAAO,EAAE,CAAC;IAMtB,WAAA,IAAA,eAAM,EAAC,cAAO,CAAC,CAAA;;GALjB,wBAAwB,CA8BpC;AA9BY,4DAAwB","sourcesContent":["import { Request } from 'express';\nimport { Scope } from '@nestjs/common';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport * as Sentry from '@sentry/node';\nimport { Span, SpanContext } from '@sentry/types';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class SentryTransactionService {\n  get span(): Span | undefined {\n    return Sentry.getCurrentHub().getScope()?.getSpan();\n  }\n\n  constructor(@Inject(REQUEST) private request: Request) {\n    const { method, headers, url } = this.request;\n\n    // recreate transaction based from HTTP request\n    const transaction = Sentry.startTransaction({\n      name: `Route: ${method} ${url}`,\n      op: 'transaction',\n    });\n\n    // setup context of newly created transaction\n    Sentry.getCurrentHub().configureScope((scope) => {\n      scope.setSpan(transaction);\n\n      // customize your context here\n      scope.setContext('http', {\n        method,\n        url,\n        headers,\n      });\n    });\n  }\n\n  startChild(spanContext: SpanContext) {\n    return this.span?.startChild(spanContext);\n  }\n}\n"]}